{"version":3,"file":"navigation.min.js","sources":["../src/navigation.js"],"sourcesContent":["define(['jquery', 'core/str'], function($, str) {\n    return {\n        init: function(params) {\n            let linkUrl = params.linkUrl || '/moodle/local/learningplan/index.php';\n            str.get_string('pluginname', 'local_learningplan').done(function(linkLabel) {\n\n                /**\n                 * Inserts a navigation link for the learning plan into the Moodle navbar.\n                 *\n                 * This function searches for the primary navigation container and checks if the\n                 * learning plan link already exists. If not, it creates and appends a new\n                 * navigation item linking to the specified learning plan URL.\n                 *\n                 * @returns {boolean} Returns true if the link was successfully inserted, otherwise false.\n                 */\n                function injectNavbarLink() {\n                    let $navContainer = $(\"div.primary-navigation nav.moremenu ul.nav\");\n\n                    if ($navContainer.length && $navContainer.find(\"#learningplan-nav-item\").length === 0) {\n                        let $li = $('<li>', {\n                            id: 'learningplan-nav-item',\n                            class: 'nav-item'\n                        });\n                        let $a = $('<a>', {\n                            href: linkUrl,\n                            class: 'nav-link',\n                            text: linkLabel\n                        });\n                        $li.append($a);\n                        $navContainer.append($li);\n                        return true;\n                    }\n                    return false;\n                }\n\n                // Try to insert the link directly\n                if (!injectNavbarLink()) {\n                    // If the navigation is not yet rendered, use MutationObserver\n                    let observer = new MutationObserver(function(mutations, observerInstance) {\n                        if (injectNavbarLink()) {\n                            observerInstance.disconnect();\n                        }\n                    });\n                    observer.observe(document.body, {childList: true, subtree: true});\n                }\n            }).fail(function() {\n                console.error('Error loading the language string for the navbar link');\n            });\n        }\n    };\n});\n"],"names":["define","$","str","init","params","linkUrl","get_string","done","linkLabel","injectNavbarLink","$navContainer","length","find","$li","id","class","$a","href","text","append","MutationObserver","mutations","observerInstance","disconnect","observe","document","body","childList","subtree","fail","console","error"],"mappings":"AAAAA,uCAAO,CAAC,SAAU,aAAa,SAASC,EAAGC,WAChC,CACHC,KAAM,SAASC,YACPC,QAAUD,OAAOC,SAAW,uCAChCH,IAAII,WAAW,aAAc,sBAAsBC,MAAK,SAASC,oBAWpDC,uBACDC,cAAgBT,EAAE,iDAElBS,cAAcC,QAAkE,IAAxDD,cAAcE,KAAK,0BAA0BD,OAAc,KAC/EE,IAAMZ,EAAE,OAAQ,CAChBa,GAAI,wBACJC,MAAO,aAEPC,GAAKf,EAAE,MAAO,CACdgB,KAAMZ,QACNU,MAAO,WACPG,KAAMV,mBAEVK,IAAIM,OAAOH,IACXN,cAAcS,OAAON,MACd,SAEJ,MAINJ,mBAAoB,CAEN,IAAIW,kBAAiB,SAASC,UAAWC,kBAChDb,oBACAa,iBAAiBC,gBAGhBC,QAAQC,SAASC,KAAM,CAACC,WAAW,EAAMC,SAAS,QAEhEC,MAAK,WACJC,QAAQC,MAAM"}