{"version":3,"file":"learningplan.min.js","sources":["../src/learningplan.js"],"sourcesContent":["define(['jquery', 'core/ajax'], function($, ajax) {\n return {\n        init: function() {\n            $(document).on('click', '.remove-section-btn', function() {\n                let button = $(this);\n                let courseId = button.data('courseid');\n                let sectionId = button.data('sectionid');\n                let userId = button.data('userid');\n\n                console.log('Neue Javascript wurde geladen');\n\n                ajax.call([{\n                    methodname: 'local_learningplan_delete_section_data',\n                    args: {\n                        courseid: courseId,\n                        sectionid: sectionId,\n                        userid: userId\n                    },\n                    done: function() {\n                        console.log('Section aus Datenbank gelöscht');\n                        // Die gesamte Tabellenzeile entfernen\n                        $('tr[data-sectionid=\"' + sectionId + '\"]').fadeOut(300, function() {\n                            $(this).remove();\n                        });\n                    },\n                    fail: function(error) {\n                        console.error('Fehler beim Entfernen der Section:', error);\n                    }\n                }]);\n            });\n\n            console.log('Datepicker wird initialisiert');\n\n            /**\n             * DATEPICKER INITIALISIEREN\n             */\n// Event Listener für das Ändern des Datums\n            $(document).ready(function() {\n                // Event Listener für das Ändern des Datums\n                $('.datepicker').on('change', function() {\n                    let input = $(this);\n                    let courseId = input.data('courseid');\n                    let sectionId = input.data('sectionid');\n                    let userId = input.data('userid');\n                    let newDeadline = input.val(); // Holt das Datum im YYYY-MM-DD Format\n\n                    console.log('Neues Datum gewählt:', newDeadline);\n\n                    // AJAX-Request zum Speichern des neuen Datums\n                    ajax.call([{\n                        methodname: 'local_learningplan_update_deadline',\n                        args: {\n                            courseid: courseId,\n                            sectionid: sectionId,\n                            userid: userId,\n                            deadline: newDeadline\n                        },\n                        done: function() {\n                            console.log('Deadline erfolgreich gespeichert!');\n                        },\n                        fail: function(error) {\n                            console.error('Fehler beim Speichern der Deadline:', error);\n                        }\n                    }]);\n                });\n            });\n\n\n            /**\n             * STATUS DROPDOWN\n             */\n\n            $('.progress-dropdown').on('change', function() {\n                let input = $(this);\n                let courseId = input.data('courseid');\n                let sectionId = input.data('sectionid');\n                let userId = input.data('userid');\n                let newProgress = input.val();\n\n                console.log('Neuer Bearbeitungsstand:', newProgress);\n\n                // AJAX-Request zum Speichern des neuen Bearbeitungsstands\n                ajax.call([{\n                    methodname: 'local_learningplan_update_progress',\n                    args: {\n                        courseid: courseId,\n                        sectionid: sectionId,\n                        userid: userId,\n                        progress: newProgress\n                    },\n                    done: function() {\n                        console.log('Bearbeitungsstand erfolgreich gespeichert!');\n                    },\n                    fail: function(error) {\n                        console.error('Fehler beim Speichern des Bearbeitungsstands:', error);\n                    }\n                }]);\n            });\n\n\n            /**\n             * SUCHE UND FILTER\n             */\n            $(document).ready(function() {\n                const searchInput = $(\"#searchInput\");\n                const filterSelect = $(\"#filterSelect\");\n\n                /**\n                 *\n                 */\n                function filterTable() {\n                    let searchText = searchInput.val().toLowerCase();\n                    let filterValue = filterSelect.val().toLowerCase();\n\n                    $(\".learningplan-section\").each(function() {\n                        let row = $(this);\n                        let courseName = row.find(\"td\").eq(0).text().toLowerCase();\n                        let sectionName = row.find(\"td\").eq(1).text().toLowerCase();\n                        let progress = row.data(\"progress\").toLowerCase();\n\n                        let matchesSearch = courseName.includes(searchText) || sectionName.includes(searchText);\n                        let matchesFilter = filterValue === \"\" || progress === filterValue;\n\n                        if (matchesSearch && matchesFilter) {\n                            row.show();\n                        } else {\n                            row.hide();\n                        }\n                    });\n                }\n\n                // Event Listener hinzufügen\n                searchInput.on(\"keyup\", filterTable);\n                filterSelect.on(\"change\", filterTable);\n            });\n\n            /**\n             * TABELLENSORTIERUNG\n             */\n            $(document).ready(function () {\n                let sortDirection = {}; // Speichert die Sortierrichtung für jede Spalte\n\n                $(\".sortable\").on(\"click\", function () {\n                    let column = $(this).data(\"column\");\n                    let tableBody = $(\"#learningPlanTable tbody\");\n                    let rows = tableBody.find(\"tr\").toArray();\n\n                    // Wechselnde Sortierrichtung\n                    sortDirection[column] = !sortDirection[column];\n\n                    rows.sort(function (rowA, rowB) {\n                        let cellA = getCellValue($(rowA), column);\n                        let cellB = getCellValue($(rowB), column);\n\n                        return (cellA < cellB ? -1 : 1) * (sortDirection[column] ? 1 : -1);\n                    });\n\n                    // Sortierte Zeilen in <tbody> einfügen (nicht <thead>!)\n                    $.each(rows, function (index, row) {\n                        tableBody.append(row);\n                    });\n                });\n\n                /**\n                 * Gibt den Index einer bestimmten Tabellenspalte zurück.\n                 *\n                 * @param {string} column - Der Name der Spalte, nach der sortiert werden soll.\n                 * @returns {number} Der Index der Spalte.\n                 */\n                function getColumnIndex(column) {\n                    let columns = [\"coursename\", \"sectionname\", \"addeddate\", \"processing_deadline\", \"progress\"];\n                    return columns.indexOf(column);\n                }\n\n                /**\n                 * Gibt den Index einer bestimmten Tabellenspalte zurück.\n                 * @param {string} row - Der Name der Spalte, nach der sortiert werden soll.\n                 * @param {string} column - Der Name der Spalte, nach der sortiert werden soll.\n                 * @returns {number} Der Index der Spalte.\n                 */\n                function getCellValue(row, column) {\n                    let cell = row.find(\"td\").eq(getColumnIndex(column));\n\n                    if (column === \"processing_deadline\") {\n                        return new Date(cell.find(\"input\").val()).getTime() || 0;\n                    }\n\n                    if (column === \"progress\") {\n                        return cell.find(\"select\").val();\n                    }\n\n                    if (column === \"addeddate\") {\n                        return new Date(cell.text().trim().split(\".\").reverse().join(\"-\")).getTime() || 0;\n                    }\n\n                    return cell.text().trim();\n                }\n            });\n\n\n\n\n        }\n    };\n});\n"],"names":["define","$","ajax","init","document","on","button","this","courseId","data","sectionId","userId","console","log","call","methodname","args","courseid","sectionid","userid","done","fadeOut","remove","fail","error","ready","input","newDeadline","val","deadline","newProgress","progress","searchInput","filterSelect","filterTable","searchText","toLowerCase","filterValue","each","row","courseName","find","eq","text","sectionName","includes","show","hide","sortDirection","getCellValue","column","cell","indexOf","getColumnIndex","Date","getTime","trim","split","reverse","join","tableBody","rows","toArray","sort","rowA","rowB","index","append"],"mappings":"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"}